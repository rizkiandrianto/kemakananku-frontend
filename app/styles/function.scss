@mixin generate-spacing-classes($spacing) {
  @each $space in $spacing {
    .ma-#{nth($space, 1)} {
      margin: #{nth($space, 1)}px !important;
    }
    .pa-#{nth($space, 1)} {
      padding: #{nth($space, 1)}px !important;
    }

    .ml-#{nth($space, 1)} {
      margin-left: #{nth($space, 1)}px !important;
    }
    .pl-#{nth($space, 1)} {
      padding-left: #{nth($space, 1)}px !important;
    }

    .mr-#{nth($space, 1)} {
      margin-right: #{nth($space, 1)}px !important;
    }
    .pr-#{nth($space, 1)} {
      padding-right: #{nth($space, 1)}px !important;
    }

    .mt-#{nth($space, 1)} {
      margin-top: #{nth($space, 1)}px !important;
    }
    .pt-#{nth($space, 1)} {
      padding-top: #{nth($space, 1)}px !important;
    }

    .mb-#{nth($space, 1)} {
      margin-bottom: #{nth($space, 1)}px !important;
    }
    .pb-#{nth($space, 1)} {
      padding-bottom: #{nth($space, 1)}px !important;
    }
  }
}

@include generate-spacing-classes($spacing);


@mixin responsive($media) {
  @if $media == phone-only {
    @media only screen and (max-width: $phone-only) { @content; }
  }
  @else if $media == tab-portrait-up {
    @media only screen and (min-width: $tab-portrait-up) { @content; }
  }
  @else if $media == tab-portrait-down {
    @media only screen and (max-width: $tab-portrait-up - 1) { @content; }
  }
  @else if $media == tab-landscape-up {
    @media only screen and (min-width: $tab-landscape-up) { @content; }
  }
  @else if $media == tab-landscape-down {
    @media only screen and (max-width: $tab-landscape-up - 1) { @content; }
  }
  @else if $media == desktop-up {
    @media only screen and (min-width: $desktop-up) { @content; }
  }
  @else if $media == desktop-down {
    @media only screen and (max-width: $desktop-up - 1) { @content; }
  }
  @else if $media == big-desktop-up {
    @media only screen and (min-width: $big-desktop-up) { @content; }
  }
  @else if $media == big-desktop-down {
    @media only screen and (min-width: $big-desktop-up - 1) { @content; }
  }
}
